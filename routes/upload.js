const express = require("express");
const router = express.Router();
const multer = require("multer");
const { cloudinary } = require("../utils/cloudinary");
const { CloudinaryStorage } = require("multer-storage-cloudinary");
const verifyToken = require("../middleware/verifyToken");

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Cloudinary-—Ö—Ä–∞–Ω–∏–ª–∏—â–∞
const storage = new CloudinaryStorage({
  cloudinary,
  params: async (req, file) => ({
    folder: "airbnb-clone",
    allowed_formats: ["jpg", "jpeg", "png"],
    public_id: file.originalname.split(".")[0], // –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ ID
  }),
});

const upload = multer({ storage });

// üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
router.post("/", verifyToken, upload.single("image"), async (req, res) => {
  try {
    if (!req.file) {
      return res.status(400).json({ error: "–§–∞–π–ª –Ω–µ –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω" });
    }

    console.log("‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª:", req.file);

    // Cloudinary –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç path = secure_url
    return res.status(200).json({ imageUrl: req.file.path });
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", err);
    return res.status(500).json({ error: err.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏" });
  }
});

module.exports = router;
